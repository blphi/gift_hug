/* 
  数组的剩余方法
*/

var arr = ["孙悟空","猪八戒","沙和尚","唐僧"]
var arr2 = ["白骨精","玉兔精","蜘蛛精","铁扇公主"]
var arr3 = ["二郎神","太上老君","玉皇大帝","凤凰"]

/* 
  concat()可以连接两个或多个数组，并将新的数组返回
    该数组不会对原数组产生影响
*/
var res = arr.concat(arr2,arr3,"111")
// console.log(res)

/* 
  join()
    - 该方法可以将数组转换为一个字符串
    - 该方法不会对原数组产生影响，而是将转换后的字符串作为结果返回
    - 在join()中可以指定一个字符串作为参数，这个字符串将会成为数组中元素的连接符，如果不指定连接符，则默认使用,作为连接符
*/
arr = ["sunwukong","zhubajie","shaheshang"]
result = arr.join("hello")
// console.log(result);

/* 
  reverse()
    该方法用来反转数组
      - 前边的去后边，后边的去前边
      - 该方法会直接修改原数组
*/

arr.reverse()
console.log(arr);

/* 
  sort()
    - 可以用来对数组中的元素进行排序
    - 也会影响原数组，默认按照Unicode编码进行编码
    - 即使对于纯数字的数组，使用sort()进行排序时，也会按照unicode编码进行排序
      所以对数字进行排序时，可能会得到错误的结果
      我们可以自己来指定排序的规则
      我们可以在sort()中添加一个回调函数，来指定排序的规则
        回调函数中需要定义两个形参
        浏览器将会分别使用数组中的元素，作为实参去调用回调函数
        浏览器会根据回调函数的返回值，来决定元素的顺序，如果返回一个大于0得知，则元素会交换位置
        如果返回一个小于0 的值，则元素位置不变
        如果返回一个等于0的值，则认为两个元素相等，不交换位置
        如果需要升序排列，则返回a-b
        如果需要降序排列，则返回b-a
*/
arr = ["a","b","c","e","f"]
arr = [1,8,45,32,23,162,433,222]
arr.sort(function (a,b) {
  // return a-b   升序排列
  return b-a  //降序排列
})
console.log(arr);